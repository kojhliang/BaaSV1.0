var express = require('express');
var bodyParser = require('body-parser');
var app = express();
app.use(express.static(__dirname+'/webcontent/static/scripts'));
app.use(express.static(__dirname+'/webcontent/static/css'));
app.use(express.static(__dirname+'/webcontent/static/images'));
app.use(express.static(__dirname+'/webcontent/static/scripts/socket.io-client'));
app.use(express.static(__dirname+'/webcontent/static/scripts/angular'));
app.use(express.static(__dirname+'/webcontent/static/scripts/angular-animate'));

app.use(bodyParser.json()); // for parsing application/json
app.use(bodyParser.urlencoded({ extended: true })); // for parsing application/x-www-form-urlencoded



require("dot").process({
	templateSettings : {
	  evaluate:    /\(\(([\s\S]+?)\)\)/g,
	  interpolate: /\(\(=([\s\S]+?)\)\)/g,
	  encode:      /\(\(!([\s\S]+?)\)\)/g,
	  use:         /\(\(#([\s\S]+?)\)\)/g,
	  define:      /\(\(##\s*([\w\.$]+)\s*(\:|=)([\s\S]+?)#\)\)/g,
	  conditional: /\(\(\?(\?)?\s*([\s\S]*?)\s*\)\)/g,
	  iterate:     /\(\(~\s*(?:\)\)|([\s\S]+?)\s*\:\s*([\w$]+)\s*(?:\:\s*([\w$]+))?\s*\)\))/g,
	  varname: 'it',
	  strip: true,
	  append: true,
	  selfcontained: false
	}
	,global: "_page.render"
	, destination: __dirname + "/webcontent/dynamic/"
	, path: (__dirname + "/templates")
});

var render = require( __dirname + "/webcontent/dynamic/");


app.get("/", function(req, res) {

	try {
		res.send(render.main());
	} catch(e) {
		console.log(" 打开主界面失败 "+e);
		return res.send(render.main(0));
	}


});

app.get("/networkpeer", function(req, res) {

	try {
		var ledgerDataStr = JSON.stringify(ledgerData);
		var statsDataStr = JSON.stringify(statsData);
        console.log("网络情况network peers:"+printArray(ledgerData.peers.peers));
		res.send(render.network({'ledgerData' : ledgerDataStr , 'statsData':statsDataStr}));
	} catch(e) {
		console.log(" Error retrieving initial hyperledger info "+e);
		return res.send(render.network(0));
	}

});